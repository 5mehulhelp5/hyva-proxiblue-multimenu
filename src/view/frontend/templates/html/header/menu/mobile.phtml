<?php

/*
 * (c) Lucas van Staden <sales@proxiblue.com.au>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 *
 * The base menu dropdown was based on hyva default mobile menu
 *
 */


use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var HeroiconsOutline $heroicons */
$heroicons = $viewModels->require(HeroiconsOutline::class);

$uniqueId = '_' . uniqid();

// Order is important here: 1. build the menu data, 2. then set the cache tags from the view model identities

$menuItems = $block->getParentBlock()->getMenuItems();

?>
<nav
    x-data="initMenuMobile<?= $escaper->escapeHtml($uniqueId) ?>()"
    @load.window="setActiveMenu($el)"
    @keydown.window.escape="closeMenu()"
    class="nav-mobile z-20 order-2 sm:order-1 lg:order-2 navigation lg:hidden w-12 h-12"
    aria-label="<?= $escaper->escapeHtmlAttr(__('Site navigation')) ?>"
    role="navigation"
>
    <!-- mobile -->
    <button
        x-ref="mobileMenuTrigger"
        @click="openMenu()"
        :class="{'overflow-x-hidden overflow-y-auto fixed top-0 left-0 w-full' : open}"
        type="button"
        aria-label="<?= $escaper->escapeHtmlAttr(__('Open menu')) ?>"
        aria-haspopup="menu"
        :aria-expanded="open"
        :hidden="open"
    >
        <?= $heroicons->menuHtml('p-3', 48, 48, [
            ":class" => "{ 'hidden' : open, 'block': !open }",
            "aria-hidden" => "true",
        ]) ?>
    </button>
    <div
        x-ref="mobileMenuNavLinks"
        class="
            fixed top-0 right-0 w-full h-full pl-1 pr-1 pt-0 flex
            flex-col border-t border-container bg-container-lighter
            overflow-y-auto overflow-x-hidden
        "
        :class="{ 'hidden' : !open }"
        :aria-hidden="open ? 'false' : 'true'"
        role="dialog"
        aria-modal="true"
    >
        <ul
            class="border-t flex flex-col"
            aria-label="<?= $escaper->escapeHtmlAttr(__('Site navigation links')) ?>"
        >
            <li class="mobile-action-container flex justify-end text-right min-h-[74px]">
                <div class="w-full self-end z-0">
                    <button
                        @click="closeMenu()"
                        class="w-16 self-end z-1"
                        aria-label="<?= $escaper->escapeHtmlAttr(__('Close menu')) ?>"
                        type="button"
                    >
                        <?= $heroicons->xHtml('hidden p-4 text-black', 64, 64, [
                            ":class" => "{ 'hidden' : !open, 'block': open }",
                            "aria-hidden" => "true",
                        ]) ?>
                    </button>
                </div>
            </li>
            <?php foreach ($menuItems as $index => $menuItem): ?>
                <li
                    data-menu-id="top-level"
                    class="level-0"
                >
                    <div
                        class="top-level-visible flex items-center transition-transform duration-0 ease-in-out transform"
                        :class="{
                            '-translate-x-full' : mobilePanelActiveId,
                            'translate-x-0' : !mobilePanelActiveId
                        }"
                    >
                        <a
                            class="flex items-center w-full px-8 py-4 border-b cursor-pointer
                                bg-container-lighter border-container level-0
                            "
                            href="<?= $escaper->escapeUrl($menuItem['url']) ?>"
                            title="<?= $escaper->escapeHtmlAttr($menuItem['name']) ?>"
                        >
                            <?= $escaper->escapeHtml($menuItem['name']) ?>
                        </a>
                        <?php if (!empty($menuItem['childData'])): ?>
                            <button
                                @click="openSubcategory(0, '<?= /* @noEscape */
                                $index ?>')"
                                class="absolute right-0 flex items-center justify-center w-11 h-11 mr-8 cursor-pointer
                                bg-container-lighter border-container"
                                aria-label="<?= $escaper->escapeHtmlAttr(__('Open %1 subcategories',
                                    $menuItem['name'])) ?>"
                                aria-haspopup="true"
                            >
                                <div class="w-8 h-8 border rounded">
                                    <?= $heroicons->chevronRightHtml('w-full h-full p-1',
                                        24, 24, ["aria-hidden" => "true"]) ?>
                                </div>
                            </button>
                        <?php endif; ?>
                    </div>
                    <?php if (!empty($menuItem['childData'])): ?>
                        <?= $block->getLayout()
                            ->getBlock('topmenu_multimenu_mobile_childitems')
                            ->setData('parent_index', 'top-level')
                            ->setData('menu_index', $index)
                            ->setData('menu_item', $menuItem)
                            ->setData('menu_level', 1)
                            ->toHtml(); ?>
                    <?php endif; ?>
                </li>
            <?php endforeach; ?>
        </ul>
    </div>
</nav>
<script>
    'use strict';

    const initMenuMobile<?= $escaper->escapeHtml($uniqueId) ?> = () => {
        return {
            mobilePanelActiveId: null,
            mobileParentIndex: 0,
            open: false,
            setActiveMenu(menuNode) {
                Array.from(menuNode.querySelectorAll('a')).filter(link => {
                    return link.href === window.location.href.split('?')[0];
                }).map(item => {
                    item.classList.add('underline');
                    item.closest('li.level-0') &&
                    item.closest('li.level-0').querySelector('a.level-0').classList.add('underline');
                });
            },
            openMenu() {
                this.open = true
                this.$nextTick(() => hyva.trapFocus(this.$refs['mobileMenuNavLinks']));
                // Prevent from body scrolling while mobile menu opened
                document.body.style.position = 'fixed';
            },
            closeMenu() {
                document.body.style.position = '';

                if (this.open) {
                    this.$nextTick(() => this.$refs['mobileMenuTrigger'].focus() || hyva.releaseFocus());
                }

                this.open = false
                this.mobilePanelActiveId = null
            },
            openSubcategory(parent, child) {
                const menuNodeRef = document.querySelector('[data-menu-id=' + child + ']')
                let parentId = menuNodeRef.getAttribute('data-parent-id')
                this.mobilePanelActiveId = child
                this.mobileParentIndex = parent
                this.$nextTick(() => hyva.trapFocus(menuNodeRef))
            },
            backToParent(index) {
                const menuNodeRef = document.querySelector('[data-menu-id=' + index + ']')
                if (index == 'top-level') {
                    this.mobilePanelActiveId = null
                    this.mobileParentIndex = 0
                    this.$nextTick(() => hyva.trapFocus(this.$refs['mobileMenuNavLinks']))
                    return;
                }
                this.mobilePanelActiveId = index;
                this.$nextTick(() => {
                    hyva.trapFocus(this.$refs['mobileMenuNavLinks'])
                    menuNodeRef.querySelector('a').focus()
                })
            },
            getMobilePanelShow(parent, current) {
                if (this.mobilePanelActiveId) {
                    return this.mobilePanelActiveId === current || this.mobileParentIndex === current;
                }
                return false;
            },
            getCloseMenuShow(current) {
                if (this.mobilePanelActiveId) {
                    var isCurrent = this.mobilePanelActiveId === current;
                    return isCurrent;
                }
                return false;
            },
            backToTopMenu() {
                this.mobilePanelActiveId = null
                this.mobileParentIndex = 0
                this.$nextTick(() => hyva.trapFocus(this.$refs['mobileMenuNavLinks']))
            }
        }
    }
</script>
