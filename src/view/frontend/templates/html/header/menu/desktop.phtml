<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsSolid;
use ProxiBlue\MultiMenu\ViewModel\Navigation;
use Magento\Framework\View\Element\Template;
use Magento\Framework\Escaper;

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var Navigation $viewModelNavigation */
$viewModelNavigation = $viewModels->require(Navigation::class);

/** @var HeroiconsSolid $heroiconsSolid */
$heroiconsSolid = $viewModels->require(HeroiconsSolid::class);


$uniqueId = '_' . uniqid();

// Order is important here: 1. build the menu data, 2. then set the cache tags from the view model identities
$menuItems = $viewModelNavigation->getNavigation($viewModelNavigation->getCategoryDepth());
$block->setData('cache_tags', $viewModelNavigation->getIdentities());


?>
<div x-data="initMenuDesktop<?= $escaper->escapeHtml($uniqueId) ?>()"
     class="z-20 order-2 sm:order-1 lg:order-2 navigation hidden lg:flex"
>
    <!-- desktop -->
    <div x-ref="nav-desktop"
         @load.window="setActiveMenu($el)"
         class="hidden lg:block lg:relative lg:min-h-0 lg:px-8 lg:w-auto lg:pt-0">
        <nav id="nav-desktop-container"
            class="nav-desktop w-full duration-150 ease-in-out transform flex justify-start
            w-auto relative min-h-0 transition-display"
        >
            <?php foreach ($menuItems as $index => $menuItem): ?>
                <div class="group group-<?= /* @noEscape */
                (string)$index ?>">
                    <button
                        @click="initMenuDesktop<?= $escaper->escapeHtml($uniqueId) ?>.hoverPanelActiveId = '<?= /* @noEscape */
                        (string)$index ?>'"
                        class="uppercase border-none bg-transparent outline-none focus:outline-none border px-3 py-1 h-10 rounded-sm flex items-center min-w-32 hover:bg-secondary-darker"
                    >
                        <span class="pr-1 font-normal flex-1">
                                <a href="<?= $escaper->escapeHtmlAttr($menuItem['url']) ?>"
                                   title="Click to view all <?= $escaper->escapeHtmlAttr($menuItem['name']) ?>"
                                   class="top-menu block w-full whitespace-nowrap first:mt-0">
                            <?= $escaper->escapeHtmlAttr($menuItem['name']) ?>
                                </a>
                        </span>
                        <?php if (!empty($menuItem['childData'])): ?>
                            <span>
                      <svg
                          class="fill-current h-4 w-4 transform group-hover:-rotate-180 transition duration-150 ease-in-out control"
                          xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                        <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/>
                      </svg>
                    </span>
                        <?php endif; ?>
                    </button>
                    <?php if (!empty($menuItem['childData'])): ?>
                        <?= $block->getLayout()->getBlock('topmenu_multimenu_childitems')
                            ->setData('parent_data', $menuItem)
                            ->setData('child_css', 'border-t-0 transform scale-0 group-hover:scale-100 origin-top')
                            ->setData('child_level', 1)
                            ->setData('show_icons', $block->getShowIcons())
                            ->setData('menu_uid', $uniqueId)
                            ->toHtml(); ?>
                    <?php endif; ?>
                </div>
            <?php endforeach; ?>
            <?= $block->getChildHtml('topmenu.additional'); ?>
        </nav>
    </div>
</div>
<script>
    'use strict';

    const initMenuDesktop<?= $escaper->escapeHtml($uniqueId) ?> = () => {
        return {
            hoverPanelActiveId: null,
            setActiveMenu(menuNode) {
                Array.from(menuNode.querySelectorAll('a')).filter(link => {
                    return link.href === window.location.href.split('?')[0];
                }).map(item => {
                    item.classList.add('underline');
                    item.closest('div.level-0') &&
                    item.closest('div.level-0').querySelector('a.level-0').classList.add('underline');
                });
            },
            checkSlideDirection(event) {
                let domElm = event.target
                if (domElm.nextElementSibling) {
                    let UlElm = domElm.nextElementSibling;
                    return new Promise((resolve, reject) => {
                        UlElm.classList.remove('slide-to-left');
                        UlElm.classList.remove('slide-to-right')
                        return resolve();
                    })
                        .then(() => {
                            if ((domElm.getBoundingClientRect().right + UlElm.offsetWidth) > window.innerWidth) {
                                UlElm.style.zIndex = -1;
                                UlElm.classList.add('slide-to-left')
                                this.slideToLeft = true;
                            } else {
                                UlElm.classList.add('slide-to-right');
                                this.slideToLeft = false;
                            }
                        });

                }
            },
            handleMobileOpenMenu(event) {
                this.moveMenuInDom();
                if (event.target.localName == 'svg') {
                    var domElm = event.target.parentElement.parentElement;
                } else {
                    var domElm = event.target.parentElement.parentElement.parentElement;
                }
                if (domElm.nextElementSibling) {
                    let UlElm = domElm.nextElementSibling;
                    let parent = domElm.offsetParent
                    if (parent.classList.contains('menu-active')) {
                        parent.classList.remove('menu-active');
                        domElm.classList.remove('menu-active');
                        UlElm.classList.remove('open-down');
                    } else {
                        parent.classList.add('menu-active');
                        domElm.classList.add('menu-active');
                        UlElm.classList.add('open-down');
                    }

                }

            },
            moveMenuInDom() {
                if (this.open === true) {
                    this.manipulateDOM('nav-mobile-container','nav-desktop-container')
                    document.getElementById('html-body').classList.add('fixed-position')
                    document.getElementById('nav-mobile').classList.add('mobile-scroll')
                } else {
                    this.manipulateDOM('nav-desktop-container','nav-mobile-container')
                    document.getElementById('html-body').classList.remove('fixed-position')
                    document.getElementById('nav-mobile').classList.remove('mobile-scroll')
                }
            },
            manipulateDOM(to,from) {
                var NavElm = document.getElementById(to);
                if (NavElm.innerHTML.trim() == '') {
                    let srcElm = document.getElementById(from);
                    return new Promise((resolve, reject) => {
                        NavElm.append(...srcElm.childNodes);
                        return resolve();
                    })
                        .then(() => {
                            Alpine.discoverUninitializedComponents(function (el) {
                                Alpine.initializeComponent(el)
                            })
                        });
                }
            }
        }
    }
</script>
