<?php
/*
 * (c) Lucas van Staden <sales@proxiblue.com.au>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 *
 * The base menu dropdown was based on https://tailwindcomponents.com/component/nestable-dropdown-menu
 *
 */


use Hyva\Theme\Model\ViewModelRegistry;
use ProxiBlue\MultiMenu\ViewModel\Navigation;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var Navigation $viewModelNavigation */
$viewModelNavigation = $viewModels->require(Navigation::class);
$menuItems = $viewModelNavigation->getNavigation($viewModelNavigation->getCategoryDepth());

?>
<div class="z-40 order-2 sm:order-1 lg:order-2 navigation">
    <!-- mobile -->
    <?= $block->getLayout()->getBlock('topmenu_multimenu_mobile')
        ->setData('menu_items', $menuItems)
        ->toHtml(); ?>

    <!-- desktop -->
    <?= $block->getLayout()->getBlock('topmenu_multimenu_desktop')
        ->setData('menu_items', $menuItems)
        ->toHtml(); ?>

</div>
<script>
    'use strict';

    const initHeaderNavigation = () => {
        return {
            mobilePanelActiveId: null,
            open: false,
            slideToLeft: false,
            activeMenu: 'nav-desktop',
            setActiveMenu(menuNode) {
                Array.from(menuNode.querySelectorAll('a')).filter(link => {
                    return link.href === window.location.href.split('?')[0];
                }).map(item => {
                    item.classList.add('underline');
                    item.closest('div.level-0') &&
                    item.closest('div.level-0').querySelector('a.level-0').classList.add('underline');
                });
                this.activeMenu = menuNode.dataset.navtype;
            },
            checkSlideDirection(event) {
                if (this.activeMenu == 'nav-desktop') {
                    let domElm = event.target
                    if (domElm.nextElementSibling) {
                        let UlElm = domElm.nextElementSibling;
                        return new Promise((resolve, reject) => {
                            UlElm.classList.remove('slide-to-left');
                            UlElm.classList.remove('slide-to-right')
                            return resolve();
                        })
                            .then(() => {
                                if ((domElm.getBoundingClientRect().right + UlElm.offsetWidth) > window.innerWidth) {
                                    UlElm.style.zIndex = -1;
                                    UlElm.classList.add('slide-to-left')
                                    this.slideToLeft = true;
                                } else {
                                    UlElm.classList.add('slide-to-right');
                                    this.slideToLeft = false;
                                }
                            });

                    }
                }
            }
        }
    }

    function swapCssClass(elm) {
        let domElm = document.getElementById('menu_item_' + elm + '_container');
        domElm.classList.remove('translate-x-0');
        domElm.classList.add('translate-x-full');
        domElm = document.getElementById('menu_item_' + elm + '_children');
        domElm.classList.add('translate-x-0');
        domElm.classList.remove('translate-x-full');
    }

    function swapCssClassBack(elm) {
        let domElm = document.getElementById('menu_item_' + elm + '_container');
        domElm.classList.add('translate-x-0');
        domElm.classList.remove('translate-x-full');
        domElm = document.getElementById('menu_item_' + elm + '_children');
        domElm.classList.remove('translate-x-0');
        domElm.classList.add('translate-x-full');
    }

    function swapCssClassIn(elm) {
        let domElm = document.getElementById('menu_item_' + elm);
        domElm.classList.add('translate-x-0');
        domElm.classList.remove('translate-x-full');
    }

    function swapCssClassOut(elm) {
        let domElm = document.getElementById('menu_item_' + elm);
        domElm.classList.remove('translate-x-0');
        domElm.classList.add('translate-x-full');
    }
</script>
